##Set and get the value of matrix, and set and get inverse of matrix
 makeCacheMatrix<- function(x=matrix()){
+     invr<-NULL
+     set<- function(y){
+         x<<- y
+         invr<<- NULL
+     }
+     get<- function()x
+     setinverse<- function(inverse)invr<<- inverse
+     getinverse<- function()invr
+     list(set=set,get=get,
+          setinverse=setinverse,
+          getinverse=getinverse)
+ }cacheSolve<- function(x,...){
+     invr<- x$getinverse()
+     if(!is.null(invr)){
+         message("Getting Cached Data")
+         return(invr)
+     }
+     data<- x$get()
+     invr<- solve(data,...)
+     x$getinverse(invr)
+     invr
+ }

##Return the inverse of the matrix
cacheSolve<- function(x,...){
+     invr<- x$getinverse()
+     if(!is.null(invr)){
+         message("Getting Cached Data")
+         return(invr)
+     }
+     data<- x$get()
+     invr<- solve(data,...)
+     x$getinverse(invr)
+     invr
+ }
